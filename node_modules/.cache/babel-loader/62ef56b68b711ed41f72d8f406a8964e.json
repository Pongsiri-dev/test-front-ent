{"ast":null,"code":"import{alpha}from'@mui/material/styles';// ----------------------------------------------------------------------\nfunction getDirection(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'bottom';return{top:'to top',right:'to right',bottom:'to bottom',left:'to left'}[value];}export default function cssStyles(theme){return{bgBlur:function bgBlur(props){var color=(props===null||props===void 0?void 0:props.color)||(theme===null||theme===void 0?void 0:theme.palette.background.default)||'#000000';var blur=(props===null||props===void 0?void 0:props.blur)||6;var opacity=(props===null||props===void 0?void 0:props.opacity)||0.8;return{backdropFilter:\"blur(\".concat(blur,\"px)\"),WebkitBackdropFilter:\"blur(\".concat(blur,\"px)\"),// Fix on Mobile\nbackgroundColor:alpha(color,opacity)};},bgGradient:function bgGradient(props){var direction=getDirection(props===null||props===void 0?void 0:props.direction);var startColor=(props===null||props===void 0?void 0:props.startColor)||\"\".concat(alpha('#000000',0),\" 0%\");var endColor=(props===null||props===void 0?void 0:props.endColor)||'#000000 75%';return{background:\"linear-gradient(\".concat(direction,\", \").concat(startColor,\", \").concat(endColor,\");\")};},bgImage:function bgImage(props){var url=(props===null||props===void 0?void 0:props.url)||'https://minimal-assets-api.vercel.app/assets/images/bg_gradient.jpg';var direction=getDirection(props===null||props===void 0?void 0:props.direction);var startColor=(props===null||props===void 0?void 0:props.startColor)||alpha((theme===null||theme===void 0?void 0:theme.palette.grey[900])||'#000000',0.88);var endColor=(props===null||props===void 0?void 0:props.endColor)||alpha((theme===null||theme===void 0?void 0:theme.palette.grey[900])||'#000000',0.88);return{background:\"linear-gradient(\".concat(direction,\", \").concat(startColor,\", \").concat(endColor,\"), url(\").concat(url,\")\"),backgroundSize:'cover',backgroundRepeat:'no-repeat',backgroundPosition:'center center'};}};}","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/test-front-ent/src/utils/cssStyles.ts"],"names":["alpha","getDirection","value","top","right","bottom","left","cssStyles","theme","bgBlur","props","color","palette","background","default","blur","opacity","backdropFilter","WebkitBackdropFilter","backgroundColor","bgGradient","direction","startColor","endColor","bgImage","url","grey","backgroundSize","backgroundRepeat","backgroundPosition"],"mappings":"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","sourcesContent":["import { Theme, alpha } from '@mui/material/styles';\n\n// ----------------------------------------------------------------------\n\ntype BackgroundBlurProps = {\n  blur?: number;\n  opacity?: number;\n  color?: string;\n};\n\ntype BackgroundGradientProps = {\n  direction?: string;\n  startColor?: string;\n  endColor?: string;\n};\n\ninterface BackgroundImageProps extends BackgroundGradientProps {\n  url?: string;\n}\n\nfunction getDirection(value = 'bottom') {\n  return {\n    top: 'to top',\n    right: 'to right',\n    bottom: 'to bottom',\n    left: 'to left'\n  }[value];\n}\n\nexport default function cssStyles(theme?: Theme) {\n  return {\n    bgBlur: (props?: BackgroundBlurProps) => {\n      const color = props?.color || theme?.palette.background.default || '#000000';\n\n      const blur = props?.blur || 6;\n      const opacity = props?.opacity || 0.8;\n\n      return {\n        backdropFilter: `blur(${blur}px)`,\n        WebkitBackdropFilter: `blur(${blur}px)`, // Fix on Mobile\n        backgroundColor: alpha(color, opacity)\n      };\n    },\n    bgGradient: (props?: BackgroundGradientProps) => {\n      const direction = getDirection(props?.direction);\n      const startColor = props?.startColor || `${alpha('#000000', 0)} 0%`;\n      const endColor = props?.endColor || '#000000 75%';\n\n      return {\n        background: `linear-gradient(${direction}, ${startColor}, ${endColor});`\n      };\n    },\n    bgImage: (props?: BackgroundImageProps) => {\n      const url =\n        props?.url || 'https://minimal-assets-api.vercel.app/assets/images/bg_gradient.jpg';\n      const direction = getDirection(props?.direction);\n      const startColor = props?.startColor || alpha(theme?.palette.grey[900] || '#000000', 0.88);\n      const endColor = props?.endColor || alpha(theme?.palette.grey[900] || '#000000', 0.88);\n\n      return {\n        background: `linear-gradient(${direction}, ${startColor}, ${endColor}), url(${url})`,\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center center'\n      };\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}