{"ast":null,"code":"import{useMemo}from'react';// @mui\nimport{CssBaseline}from'@mui/material';import{createTheme,ThemeProvider as MUIThemeProvider,StyledEngineProvider}from'@mui/material/styles';// hooks\nimport useSettings from'../hooks/useSettings';//\nimport palette from'./palette';import typography from'./typography';import breakpoints from'./breakpoints';import componentsOverride from'./overrides';import shadows,{customShadows}from'./shadows';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ThemeProvider(_ref){var children=_ref.children;var _useSettings=useSettings(),themeMode=_useSettings.themeMode,themeDirection=_useSettings.themeDirection;var isLight=themeMode==='light';var themeOptions=useMemo(function(){return{palette:isLight?palette.light:palette.dark,typography:typography,breakpoints:breakpoints,shape:{borderRadius:8},direction:themeDirection,shadows:isLight?shadows.light:shadows.dark,customShadows:isLight?customShadows.light:customShadows.dark};},[isLight,themeDirection]);var theme=createTheme(themeOptions);theme.components=componentsOverride(theme);return/*#__PURE__*/_jsx(StyledEngineProvider,{injectFirst:true,children:/*#__PURE__*/_jsxs(MUIThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),children]})});}","map":{"version":3,"sources":["/Users/pongsiri.an/Documents/GitHub/test-front-ent/src/theme/index.tsx"],"names":["useMemo","CssBaseline","createTheme","ThemeProvider","MUIThemeProvider","StyledEngineProvider","useSettings","palette","typography","breakpoints","componentsOverride","shadows","customShadows","children","themeMode","themeDirection","isLight","themeOptions","light","dark","shape","borderRadius","direction","theme","components"],"mappings":"AAAA,OAASA,OAAT,KAAmC,OAAnC,CACA;AACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OACEC,WADF,CAGEC,aAAa,GAAIC,CAAAA,gBAHnB,CAIEC,oBAJF,KAKO,sBALP,CAMA;AACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,aAA/B,CACA,MAAOC,CAAAA,OAAP,EAAkBC,aAAlB,KAAuC,WAAvC,CAEA;wFAMA,cAAe,SAAST,CAAAA,aAAT,MAA4C,IAAnBU,CAAAA,QAAmB,MAAnBA,QAAmB,CACzD,iBAAsCP,WAAW,EAAjD,CAAQQ,SAAR,cAAQA,SAAR,CAAmBC,cAAnB,cAAmBA,cAAnB,CACA,GAAMC,CAAAA,OAAO,CAAGF,SAAS,GAAK,OAA9B,CAEA,GAAMG,CAAAA,YAA0B,CAAGjB,OAAO,CACxC,iBAAO,CACLO,OAAO,CAAES,OAAO,CAAGT,OAAO,CAACW,KAAX,CAAmBX,OAAO,CAACY,IADtC,CAELX,UAAU,CAAVA,UAFK,CAGLC,WAAW,CAAXA,WAHK,CAILW,KAAK,CAAE,CAAEC,YAAY,CAAE,CAAhB,CAJF,CAKLC,SAAS,CAAEP,cALN,CAMLJ,OAAO,CAAEK,OAAO,CAAGL,OAAO,CAACO,KAAX,CAAmBP,OAAO,CAACQ,IANtC,CAOLP,aAAa,CAAEI,OAAO,CAAGJ,aAAa,CAACM,KAAjB,CAAyBN,aAAa,CAACO,IAPxD,CAAP,EADwC,CAUxC,CAACH,OAAD,CAAUD,cAAV,CAVwC,CAA1C,CAaA,GAAMQ,CAAAA,KAAK,CAAGrB,WAAW,CAACe,YAAD,CAAzB,CACAM,KAAK,CAACC,UAAN,CAAmBd,kBAAkB,CAACa,KAAD,CAArC,CAEA,mBACE,KAAC,oBAAD,EAAsB,WAAW,KAAjC,uBACE,MAAC,gBAAD,EAAkB,KAAK,CAAEA,KAAzB,wBACE,KAAC,WAAD,IADF,CAEGV,QAFH,GADF,EADF,CAQD","sourcesContent":["import { useMemo, ReactNode } from 'react';\n// @mui\nimport { CssBaseline } from '@mui/material';\nimport {\n  createTheme,\n  ThemeOptions,\n  ThemeProvider as MUIThemeProvider,\n  StyledEngineProvider\n} from '@mui/material/styles';\n// hooks\nimport useSettings from '../hooks/useSettings';\n//\nimport palette from './palette';\nimport typography from './typography';\nimport breakpoints from './breakpoints';\nimport componentsOverride from './overrides';\nimport shadows, { customShadows } from './shadows';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport default function ThemeProvider({ children }: Props) {\n  const { themeMode, themeDirection } = useSettings();\n  const isLight = themeMode === 'light';\n\n  const themeOptions: ThemeOptions = useMemo(\n    () => ({\n      palette: isLight ? palette.light : palette.dark,\n      typography,\n      breakpoints,\n      shape: { borderRadius: 8 },\n      direction: themeDirection,\n      shadows: isLight ? shadows.light : shadows.dark,\n      customShadows: isLight ? customShadows.light : customShadows.dark\n    }),\n    [isLight, themeDirection]\n  );\n\n  const theme = createTheme(themeOptions);\n  theme.components = componentsOverride(theme);\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <MUIThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MUIThemeProvider>\n    </StyledEngineProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}